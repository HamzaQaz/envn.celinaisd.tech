# Nginx Configuration for Frontend (envn.celinaisd.tech)
# This configuration serves the React static files

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name envn.celinaisd.tech www.envn.celinaisd.tech;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://envn.celinaisd.tech$request_uri;
}

# HTTPS server - Redirect www to non-www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.envn.celinaisd.tech;

    # SSL certificates (Let's Encrypt)
    # ssl_certificate /etc/letsencrypt/live/envn.celinaisd.tech/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/envn.celinaisd.tech/privkey.pem;

    # Redirect to non-www
    return 301 https://envn.celinaisd.tech$request_uri;
}

# HTTPS server - Main
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name envn.celinaisd.tech;

    # SSL certificates (Let's Encrypt)
    # These paths will be automatically configured by certbot
    # ssl_certificate /etc/letsencrypt/live/envn.celinaisd.tech/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/envn.celinaisd.tech/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Root directory for React build
    root /var/www/envn/client/dist;
    index index.html;

    # Logging
    access_log /var/log/nginx/envn-access.log;
    error_log /var/log/nginx/envn-error.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy (adjust as needed)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://enapi.celinaisd.tech wss://enapi.celinaisd.tech;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Service worker (no cache)
    location = /service-worker.js {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    # Manifest file
    location = /manifest.json {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # React Router - handle client-side routing
    # All non-file requests should go to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
